[{"/Users/oleg/Desktop/My projects/Teaparty House/src/index.js":"1","/Users/oleg/Desktop/My projects/Teaparty House/src/App.js":"2","/Users/oleg/Desktop/My projects/Teaparty House/src/components/Form/Form.jsx":"3","/Users/oleg/Desktop/My projects/Teaparty House/src/components/Widgets/Widgets.jsx":"4","/Users/oleg/Desktop/My projects/Teaparty House/src/components/UsersOnline/UsersOnline.jsx":"5","/Users/oleg/Desktop/My projects/Teaparty House/src/components/Chat/Chat.jsx":"6","/Users/oleg/Desktop/My projects/Teaparty House/src/components/UserList/UserList.jsx":"7","/Users/oleg/Desktop/My projects/Teaparty House/src/components/AudioPlayer/Player.jsx":"8","/Users/oleg/Desktop/My projects/Teaparty House/src/components/JrpgOfTheDay/JrpgOfTheDay.jsx":"9","/Users/oleg/Desktop/My projects/Teaparty House/src/components/Header/Header.jsx":"10","/Users/oleg/Desktop/My projects/Teaparty House/src/components/Video/Video.jsx":"11","/Users/oleg/Desktop/My projects/Teaparty House/src/components/Chat/Message/Message.jsx":"12","/Users/oleg/Desktop/My projects/Teaparty House/src/components/Header/changeThemeButton/changeThemeButton.jsx":"13","/Users/oleg/Desktop/My projects/Teaparty House/src/components/Header/ChangeThemeButton/ChangeThemeButton.jsx":"14","/Users/oleg/Desktop/My projects/Teaparty House/src/components/UserList/User/User.jsx":"15","/Users/oleg/Desktop/My projects/Teaparty House/src/components/UserList/User/JrpgList/JrpgList.jsx":"16","/Users/oleg/Desktop/My projects/Teaparty House/src/components/UserList/User/JrpgList/Jrpg/Jrpg.jsx":"17","/Users/oleg/Desktop/My projects/Teaparty House/src/store.js":"18","/Users/oleg/Desktop/My projects/Teaparty House/src/components/Chat/BotMessage/BotMessage.jsx":"19"},{"size":335,"mtime":1614982335912,"results":"20","hashOfConfig":"21"},{"size":4422,"mtime":1615125923509,"results":"22","hashOfConfig":"21"},{"size":3998,"mtime":1614983432727,"results":"23","hashOfConfig":"21"},{"size":156,"mtime":1608737587273,"results":"24","hashOfConfig":"21"},{"size":711,"mtime":1613590563220,"results":"25","hashOfConfig":"21"},{"size":1957,"mtime":1615120573887,"results":"26","hashOfConfig":"21"},{"size":1297,"mtime":1615122957711,"results":"27","hashOfConfig":"21"},{"size":2116,"mtime":1615115037450,"results":"28","hashOfConfig":"21"},{"size":1482,"mtime":1615109161252,"results":"29","hashOfConfig":"21"},{"size":613,"mtime":1614948971746,"results":"30","hashOfConfig":"21"},{"size":742,"mtime":1614450412728,"results":"31","hashOfConfig":"21"},{"size":350,"mtime":1615120677804,"results":"32","hashOfConfig":"21"},{"size":402,"mtime":1614770211876,"results":"33","hashOfConfig":"21"},{"size":1107,"mtime":1614892628484,"results":"34","hashOfConfig":"21"},{"size":2180,"mtime":1615114477643,"results":"35","hashOfConfig":"21"},{"size":338,"mtime":1614949223053,"results":"36","hashOfConfig":"21"},{"size":930,"mtime":1613588824555,"results":"37","hashOfConfig":"21"},{"size":428,"mtime":1615123214622,"results":"38","hashOfConfig":"21"},{"size":405,"mtime":1615120717464,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1myjkqe",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/oleg/Desktop/My projects/Teaparty House/src/index.js",[],["84","85"],"/Users/oleg/Desktop/My projects/Teaparty House/src/App.js",["86"],"/Users/oleg/Desktop/My projects/Teaparty House/src/components/Form/Form.jsx",[],"/Users/oleg/Desktop/My projects/Teaparty House/src/components/Widgets/Widgets.jsx",[],"/Users/oleg/Desktop/My projects/Teaparty House/src/components/UsersOnline/UsersOnline.jsx",[],"/Users/oleg/Desktop/My projects/Teaparty House/src/components/Chat/Chat.jsx",["87"],"import React, { useState, useEffect, useRef } from 'react';\n\nimport Message from './Message/Message';\nimport BotMessage from './BotMessage/BotMessage';\nimport './Chat.css';\n\nconst Chat = () => {\n    const [messages, setMessages] = useState([]);\n    const [messageValue, setMessageValue] = useState('');\n    const scroll = useRef();\n\n    const sendMessage = e => {\n        e.preventDefault();\n\n        const messagesCopy = [...messages, {id: Math.floor(Math.random() * 100), text: messageValue}];\n        \n        // const messagesCopy = [...messages, {id: Math.floor(Math.random() * 100), text: messageValue.includes('@Johnny') ? 'Hello from bot! <3': messageValue}]; // TODO\n        \n        setMessages(messagesCopy);\n        setMessageValue('');\n        scroll.current.scrollIntoView({behavior: 'smooth'});\n    }\n\n    // console.log(messages, messageValue);\n\n    return (\n        <div>\n            <h3>Chat</h3>\n            <div className=\"chat\">\n                {/* {messages && messages.map(message => <Message key={message.id} message={message.text} />)} */}\n                {messages && messages.map(message => message.text.includes('@Johnny') ?\n                    <BotMessage key={message.id} message={message.text} /> :\n                    <Message key={message.id} message={message.text} />)\n                }\n               \n                <div ref={scroll}></div>\n            </div>\n            <form className=\"chat-form\" action=\"\" onSubmit={sendMessage}>\n                <input \n                    type=\"text\" \n                    value={messageValue} \n                    onChange={e => setMessageValue(e.target.value)} \n                    onKeyPress={e => e.key === 'Enter' ? sendMessage(e) : null}\n                    placeholder=\"Write a message...\" \n                    required\n                />\n                <button className=\"chat-btn\"type=\"submit\">Send</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Chat;","/Users/oleg/Desktop/My projects/Teaparty House/src/components/UserList/UserList.jsx",["88","89","90","91","92"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n// import FlipMove from 'react-flip-move';\n\nimport User from './User/User';\nimport './Userlist.css';\n\nconst UserList = ({ users, updateLikes }) => {   \n    const [sorted, setSorted] = useState(users);\n    const [isSorted, setIsSorted] = useState(false);\n\n    const handleSort = () => {\n       const sortedUsers = [...sorted].sort((a , b) => a.name.localeCompare(b.name));\n       \n       setSorted(sortedUsers);\n       setIsSorted(!isSorted);\n    };\n\n    const defaultOrder = users.\n        map((item, index) => <User key={item.id} {...item} updateLikes={updateLikes} />);\n    const sortedOrder = sorted.\n        map((item, index) => <User key={item.id} {...item} updateLikes={updateLikes} />);\n\n\n    return (\n        <div>\n            <button className=\"sort-btn\" onClick={handleSort}>Sort users</button>\n            <ul className=\"user__list\">\n                {isSorted ? sortedOrder : defaultOrder}\n            </ul>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        users: state.users,\n    }\n}\n\nUserList.propTypes = {\n    users: PropTypes.arrayOf(PropTypes.object),\n    updateLikes: PropTypes.func.isRequired,\n}\n\nexport default UserList;","/Users/oleg/Desktop/My projects/Teaparty House/src/components/AudioPlayer/Player.jsx",["93"],"import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nconst random = arr => arr[Math.floor(Math.random() * arr.length)];\n\nconst Player = ({ playlist }) => {\n    const [playing, setPlaying] = useState(false);\n    const [track, setTrack] = useState({});\n    const audio = useRef(track);\n    \n    useEffect(() => {\n        setTrack(random(playlist));\n        \n        audio.current.addEventListener('ended', () => setTrack(track));\n        \n        const audioNode = audio.current;\n\n        return () => audioNode.removeEventListener('ended', () => setPlaying(false));\n    }, [track])\n    \n    const toggle = () => {\n        audio.current.paused ? audio.current.play() : audio.current.pause();\n        \n        setPlaying(!playing);\n    }\n\n    return (\n        <div>\n            <audio \n                ref={audio} \n                src={process.env.PUBLIC_URL + `${track?.track}.mp3`} \n                type=\"audio/mpeg\" \n                preload=\"auto\" \n                autoPlay \n                // loop\n            />\n            <button className=\"btn\" onClick={toggle}>{playing ? 'Pause' : 'Play'}</button>\n            <span>Now playing:</span>\n            <span>{playing ? track?.title : 'Paused... ¯\\\\_(ツ)_/¯'}</span>\n        </div>\n    )\n}\n\n// const useAudio = track => {\n//     const [audio] = useState(new Audio(track));\n//     const [playing, setPlaying] = useState(false);\n\n//     const toggle = () => setPlaying(!playing);\n\n//     useEffect(() => playing ? audio.play() : audio.pause(), [playing]);\n\n//     useEffect(() => {\n//         audio.addEventListener('ended', () => setPlaying(false));\n\n//         return () => audio.removeEventListener('ended', () => setPlaying(false));\n//     }, []);\n\n//     return [playing, toggle];\n// }\n\n// const Player = ({ track }) => {\n//     const [playing, toggle] = useAudio(track);\n\n//     return (\n//         <div>\n//             <button onClick={toggle}>{playing ? \"Pause\" : \"Play\"}</button>\n//         </div>\n//     )\n// }\n\nPlayer.propTypes = {\n    playlist: PropTypes.arrayOf(PropTypes.object),\n}\n\nexport default Player;","/Users/oleg/Desktop/My projects/Teaparty House/src/components/JrpgOfTheDay/JrpgOfTheDay.jsx",["94"],"import React, { useState, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './JrpgOfTheDay.css';\n\nconst random = arr => arr[Math.floor(Math.random() * arr.length)];\n\nconst JrpgOfTheDay = ({ users }) => {\n    const [jrpg, setJrpg] = useState({});\n\n    const jrpgListTitle = users.map(user => user.top.map(item => item.description));\n    const randomJrpgTitle = useMemo(() => random([...new Set(jrpgListTitle.flat())]), []); //? jrpgListTitle\n    console.log(randomJrpgTitle);\n    \n    useEffect(() => {\n        // const jrpgListTitle = users.map(user => user.top.map(item => item.description.title));\n        // const randomJrpgTitle = random([...new Set(jrpgListTitle.flat())]);\n        // console.log(randomJrpgTitle, 'wtf?');\n        // window.addEventListener('DOMContentLoaded', (e) => setJrpg(randomJrpgTitle));\n\n        window.addEventListener('load', () => setJrpg(randomJrpgTitle)); //?\n        console.log(jrpg, 'Component did mount (of the day)');\n    }, [jrpg, randomJrpgTitle]);\n\n    // window.addEventListener('load', () => setJrpg(randomJrpgTitle)); //?\n\n    return (\n        <div className=\"day__container\">\n            <span>JRPG of the day:</span>\n            <span>{jrpg?.title}</span>\n            <img\n                src={process.env.PUBLIC_URL + jrpg?.art} \n                alt=\"jrpg\" \n            />\n        </div>\n    )\n}\n\nJrpgOfTheDay.propTypes = {\n    users: PropTypes.arrayOf(PropTypes.object),\n}\n\nexport default JrpgOfTheDay;","/Users/oleg/Desktop/My projects/Teaparty House/src/components/Header/Header.jsx",[],"/Users/oleg/Desktop/My projects/Teaparty House/src/components/Video/Video.jsx",[],"/Users/oleg/Desktop/My projects/Teaparty House/src/components/Chat/Message/Message.jsx",[],"/Users/oleg/Desktop/My projects/Teaparty House/src/components/Header/changeThemeButton/changeThemeButton.jsx",[],["95","96"],"/Users/oleg/Desktop/My projects/Teaparty House/src/components/Header/ChangeThemeButton/ChangeThemeButton.jsx",[],"/Users/oleg/Desktop/My projects/Teaparty House/src/components/UserList/User/User.jsx",[],"/Users/oleg/Desktop/My projects/Teaparty House/src/components/UserList/User/JrpgList/JrpgList.jsx",[],"/Users/oleg/Desktop/My projects/Teaparty House/src/components/UserList/User/JrpgList/Jrpg/Jrpg.jsx",[],"/Users/oleg/Desktop/My projects/Teaparty House/src/store.js",[],"/Users/oleg/Desktop/My projects/Teaparty House/src/components/Chat/BotMessage/BotMessage.jsx",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":18,"column":8,"nodeType":"103","messageId":"104","endLine":18,"endColumn":17},{"ruleId":"101","severity":1,"message":"105","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"105","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"106","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":17},{"ruleId":"107","severity":1,"message":"108","line":20,"column":31,"nodeType":"109","messageId":"110","endLine":20,"endColumn":32,"fix":"111"},{"ruleId":"107","severity":1,"message":"108","line":22,"column":31,"nodeType":"109","messageId":"110","endLine":22,"endColumn":32,"fix":"112"},{"ruleId":"101","severity":1,"message":"113","line":36,"column":7,"nodeType":"103","messageId":"104","endLine":36,"endColumn":22},{"ruleId":"114","severity":1,"message":"115","line":19,"column":8,"nodeType":"116","endLine":19,"endColumn":15,"suggestions":"117"},{"ruleId":"114","severity":1,"message":"118","line":12,"column":87,"nodeType":"116","endLine":12,"endColumn":89,"suggestions":"119"},{"ruleId":"97","replacedBy":"120"},{"ruleId":"99","replacedBy":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'testTrack' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'connect' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"124","text":"125"},{"range":"126","text":"125"},"'mapStateToProps' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'playlist'. Either include it or remove the dependency array. If 'setTrack' needs the current value of 'playlist', you can also switch to useReducer instead of useState and read 'playlist' in the reducer.","ArrayExpression",["127"],"React Hook useMemo has a missing dependency: 'jrpgListTitle'. Either include it or remove the dependency array.",["128"],["122"],["123"],"no-global-assign","no-unsafe-negation",[607,617],"\n        .",[729,739],{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [playlist, track]",{"range":"133","text":"134"},"Update the dependencies array to be: [jrpgListTitle]",{"range":"135","text":"136"},[616,623],"[playlist, track]",[448,450],"[jrpgListTitle]"]